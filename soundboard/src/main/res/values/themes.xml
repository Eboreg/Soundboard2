<!--
"Theme attributes are different from view attributes because they’re not properties specific to an individual view
type but _semantically_ named pointers to values which are applicable more broadly in an app. A theme provides
concrete values for these named resources."

"Themes are a collection of named resources, useful broadly across an app"

- https://medium.com/androiddevelopers/android-styling-themes-vs-styles-ebe05f917578
-->
<resources>

    <style name="Base.Theme.Soundboard" parent="Theme.MaterialComponents.DayNight">
        <item name="actionDropDownStyle">@style/Style.Soundboard.Toolbar</item>
        <item name="actionBarSize">@dimen/actionbar_height</item>
        <item name="actionBarStyle">@style/Style.Soundboard.Toolbar</item>
        <item name="actionModeStyle">@style/Style.Soundboard.Toolbar</item>
        <item name="actionOverflowMenuStyle">@style/Style.Soundboard.Toolbar.PopupMenu.Overflow</item>
        <item name="alertDialogTheme">@style/Theme.Soundboard.MaterialAlertDialog</item>
        <item name="android:actionOverflowMenuStyle">@style/Style.Soundboard.Toolbar.PopupMenu.Overflow</item>
        <item name="android:dropDownSpinnerStyle">@style/Style.Soundboard.Spinner</item>
        <item name="android:fontFamily">@font/lato</item>
        <item name="android:navigationBarColor">?attr/colorSurface</item>
        <item name="android:spinnerItemStyle">@style/Style.Soundboard.Spinner.Item</item>
        <item name="android:spinnerStyle">@style/Style.Soundboard.Spinner</item>
        <item name="android:statusBarColor">?attr/colorPrimary</item>
        <item name="fontAwesomeButtonStyle">@style/FontAwesomeButton</item>
        <item name="fontAwesomeTextViewStyle">@style/FontAwesomeTextView</item>
        <item name="materialAlertDialogTheme">@style/Theme.Soundboard.MaterialAlertDialog</item>
        <item name="materialButtonStyle">@style/Style.Soundboard.Button</item>
    </style>

    <style name="Theme.Soundboard" parent="Base.Theme.Soundboard">
        <item name="actionMenuTextColor">@color/grey_800</item>
        <item name="android:textColorHint">@color/secondary_text</item>
        <item name="android:textColorTertiary">@color/secondary_text</item>
        <item name="android:windowBackground">?attr/colorSurface</item>

        <!-- a secondary color for controls like checkboxes and text fields -->
        <item name="colorAccent">@color/blue_grey_500</item>

        <item name="colorBackgroundFloating">@color/grey_300</item>

        <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of the background color. -->
        <item name="colorOnBackground">@color/black</item>

        <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of the primary color. -->
        <item name="colorOnPrimary">@color/black</item>
        <item name="colorOnPrimaryVariant">@color/black</item>

        <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of the secondary color. -->
        <item name="colorOnSecondary">@color/white</item>

        <!-- A color that passes accessibility guidelines for text/iconography when drawn on top of the surface color. -->
        <item name="colorOnSurface">@color/black</item>

        <item name="colorOnSurfaceVariant">@color/grey_900</item>

        <!-- The color displayed most frequently across your app’s screens and components. This color should pass
             accessibilty guidelines for text / iconography when drawn on top of the surface or background color.
             Color for the app bar and other primary UI elements. -->
        <item name="colorPrimary">@color/blue_grey_200</item>

        <!-- A darker variant of the primary color, used for the status bar (on Android 5.0+) and contextual app bars. -->
        <item name="colorPrimaryDark">@color/blue_grey_400</item>

        <!-- A tonal variation of the primary color. -->
        <item name="colorPrimaryVariant">@color/blue_grey_100</item>

        <!-- The secondary branding color for the app, usually an accented complement to the primary branding color. -->
        <item name="colorSecondary">@color/teal_500</item>

        <!-- A tonal variation of the secondary color. -->
        <item name="colorSecondaryVariant">@color/teal_700</item>

        <!-- Surface colors affect surfaces of components, such as cards, sheets, and menus. -->
        <item name="colorSurface">@color/grey_100</item>
        <item name="menuIconColor">@color/menu_icon</item>
    </style>

    <style name="Theme.Soundboard.NoActionBar">
        <!-- We actually do have an actionbar, but we create and style it ourselves -->
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="windowActionBarOverlay">true</item>
        <item name="windowActionModeOverlay">true</item>
    </style>

    <style name="Theme.Soundboard.MaterialAlertDialog" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <item name="android:windowMinWidthMajor">@dimen/dialog_min_width</item>
        <item name="android:windowMinWidthMinor">@dimen/dialog_min_width</item>
        <item name="buttonBarButtonStyle">@style/Style.Soundboard.Button.TextButton</item>
        <item name="buttonBarNegativeButtonStyle">@style/Style.Soundboard.Button.TextButton.Negative</item>
        <item name="buttonBarNeutralButtonStyle">@style/Style.Soundboard.Button.TextButton</item>
        <item name="buttonBarPositiveButtonStyle">@style/Style.Soundboard.Button.TextButton</item>
        <item name="materialAlertDialogTitleTextStyle">@style/Style.Soundboard.Title.Text</item>
    </style>

    <style name="Theme.Soundboard.MaterialAlertDialog.EqualButtons">
        <item name="buttonBarNegativeButtonStyle">@style/Style.Soundboard.Button.TextButton</item>
    </style>
</resources>